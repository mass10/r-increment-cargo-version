name: Create release to make .exe published.

on:
    # main ブランチに変更が push されたときにジョブを実行します。
    push:
        branches: [ "main" ]

    # Web UI から手動でトリガーします。
    workflow_dispatch:

jobs:
    # CREATE RELEASE AND UPLOAD EXECUTABLE FILE
    create-releases:
        runs-on: windows-latest
        needs: [build-on-windows, build-on-linux]
        permissions:
            # "write" permission is required to create a release. (NO NEED to grant at repository settings.)
            contents: write
        steps:
            # CHECKOUT REPOSITORY
          - name: Checkout
            uses: actions/checkout@v3
            with:
                fetch-depth: 1
            # DOWNLOAD ARTIFACTS
          - name: Download artifacts
            uses: actions/download-artifact@v2
            with:
                name: my-temporary-artifacts
            # DOWNLOAD CRATE
          - name: Download crate
            run: Invoke-WebRequest
                    -Uri "https://github.com/mass10/r-gh-create-release/releases/latest/download/r-gh-create-release.exe"
                    -OutFile "r-gh-create-release.exe"
            # CREATE RELEASE AND UPLOAD EXECUTABLE FILE
          - name: release を作成して実行ファイルを公開
            run: .\r-gh-create-release.exe
                    --determine-version-from Cargo.toml
                    --file r-increment-cargo-version.exe
                    --file r-increment-cargo-version
            env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            # DELETE ARTIFACTS
          - name: Delete artifacts
            run: |
                curl -X DELETE -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" `
                    "https://api.github.com/repos/${{ github.repository }}/actions/artifacts" -d "{""name"":""artifacts""}"

    # FOR WINDOWS
    build-on-windows:
        runs-on: windows-latest
        steps:
            # CHECKOUT REPOSITORY
          - name: Checkout
            uses: actions/checkout@v3
            with:
                fetch-depth: 1
            # BUILD APPLICATION FOR WINDOWS
          - name: Create the app package
            run: cargo.exe build --release
            # CREATE ARTIFACTS
          - name: Create Release
            uses: actions/upload-artifact@v3
            with:
                name: my-temporary-artifacts
                path: target\release\r-increment-cargo-version.exe

    # FOR LINUX
    build-on-linux:
        runs-on: ubuntu-20.04 # ubuntu-latest
        steps:
            # CHECKOUT REPOSITORY
          - name: Checkout
            uses: actions/checkout@v3
            with:
                fetch-depth: 1
            # BUILD APPLICATION FOR WINDOWS
          - name: Create the app package
            run: cargo build --release
            # CREATE ARTIFACTS
          - name: Create Release
            uses: actions/upload-artifact@v3
            with:
                name: my-temporary-artifacts
                path: target/release/r-increment-cargo-version
